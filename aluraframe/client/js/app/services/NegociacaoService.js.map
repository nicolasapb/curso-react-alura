{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","resolve","reject","getConnection","connection","dao","adiciona","listaTodos","negs","apagaTodos","listaAtual","obterNegociacoes","filter","some","n","isEquals","v"],"mappings":";;;;;;;;;;;;;;;AAASA,uB,gBAAAA,W;;AACAC,6B,sBAAAA,iB;;AACAC,yB,qBAAAA,a;;AACAC,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;yCAEIC,iB;AAET,6CAAc;AAAA;;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;;;uDAEkB;AACf,+BAAOM,QAAQC,GAAR,CAAY,CACf,KAAKC,wBAAL,EADe,EAEf,KAAKC,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAKPC,IALO,CAKF,oBAAY;AACb,gCAAMC,cAAcC,SAASC,MAAT,CAAgB,UAACC,KAAD,EAAQC,OAAR;AAAA,uCAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,6BAAhB,EAA2D,EAA3D,CAApB;AACA,mCAAOJ,WAAP;AACH,yBARM,EAQJM,KARI,CAQE,gBAAQ;AAAE,kCAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AAAuB,yBARnC,CAAP;AASH;;;+DAE0B;AACvB,+BAAO,KAAKf,KAAL,CAAWgB,GAAX,CAAe,oBAAf,EACFV,IADE,CACG;AAAA,mCAAeC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAf;AAAA,yBADH,EAEFT,KAFE,CAEI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,iDAAV,CAAN;AACH,yBALE,CAAP;AAMH;;;uEAEkC;AAC/B,+BAAO,KAAKd,KAAL,CAAWgB,GAAX,CAAe,sBAAf,EACFV,IADE,CACG;AAAA,mCAAeC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAf;AAAA,yBADH,EAEFT,KAFE,CAEI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,0DAAV,CAAN;AACH,yBALE,CAAP;AAMH;;;wEAEmC;AAChC,+BAAO,KAAKd,KAAL,CAAWgB,GAAX,CAAe,uBAAf,EACFV,IADE,CACG;AAAA,mCAAeC,YAAYU,GAAZ,CAAgB;AAAA,uCAAU,IAAInB,UAAJ,CAAe,IAAIoB,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAV;AAAA,6BAAhB,CAAf;AAAA,yBADH,EAEFT,KAFE,CAEI,gBAAQ;AACXU,oCAAQC,GAAR,CAAYT,IAAZ;AACA,kCAAM,IAAID,KAAJ,CAAU,wDAAV,CAAN;AACH,yBALE,CAAP;AAMH;;;6CAEQW,U,EAAY;AACjB,+BAAO,IAAIxB,OAAJ,CAAY,UAACyB,OAAD,EAAUC,MAAV,EAAqB;AACpC/B,8CACKgC,aADL,GAEKtB,IAFL,CAEU;AAAA,uCAAc,IAAIT,aAAJ,CAAkBgC,UAAlB,CAAd;AAAA,6BAFV;AAGI;AAHJ,6BAIKvB,IAJL,CAIU;AAAA,uCAAOwB,IAAIC,QAAJ,CAAaN,UAAb,CAAP;AAAA,6BAJV,EAKKnB,IALL,CAKU;AAAA,uCAAcoB,QAAQD,UAAR,CAAd;AAAA,6BALV,EAMKZ,KANL,CAMW;AAAA,uCAAQc,OAAOZ,IAAP,CAAR;AAAA,6BANX;AAOH,yBARM,CAAP;AASH;;;4CAEO;AACJ,+BAAO,IAAId,OAAJ,CAAY,UAACyB,OAAD,EAAUC,MAAV,EAAqB;AACpC/B,8CACKgC,aADL,GAEKtB,IAFL,CAEU;AAAA,uCAAc,IAAIT,aAAJ,CAAkBgC,UAAlB,CAAd;AAAA,6BAFV,EAGKvB,IAHL,CAGU;AAAA,uCAAOwB,IAAIE,UAAJ,CAAelC,UAAf,CAAP;AAAA,6BAHV,EAIKQ,IAJL,CAIU;AAAA,uCAAQoB,QAAQO,IAAR,CAAR;AAAA,6BAJV,EAKKpB,KALL,CAKW;AAAA,uCAAQc,OAAOZ,IAAP,CAAR;AAAA,6BALX;AAMH,yBAPM,CAAP;AAQH;;;4CAEO;AACJ,+BAAO,IAAId,OAAJ,CAAY,UAACyB,OAAD,EAAUC,MAAV,EAAqB;AACpC/B,8CACKgC,aADL,GAEKtB,IAFL,CAEU;AAAA,uCAAc,IAAIT,aAAJ,CAAkBgC,UAAlB,CAAd;AAAA,6BAFV,EAGKvB,IAHL,CAGU;AAAA,uCAAOwB,IAAII,UAAJ,EAAP;AAAA,6BAHV,EAIK5B,IAJL,CAIU;AAAA,uCAAMoB,SAAN;AAAA,6BAJV,EAKKb,KALL,CAKW;AAAA,uCAAQc,OAAOZ,IAAP,CAAR;AAAA,6BALX;AAMH,yBAPM,CAAP;AAQH;;;4CAEOoB,U,EAAY;AAChB,+BAAO,KAAKC,gBAAL,GACF9B,IADE,CACG;AAAA,mCAAQ2B,KAAKI,MAAL,CAAY;AAAA,uCAAK,CAACF,WAAWG,IAAX,CAAgB;AAAA,2CAAKC,EAAEC,QAAF,CAAWC,CAAX,CAAL;AAAA,iCAAhB,CAAN;AAAA,6BAAZ,CAAR;AAAA,yBADH,EAEF5B,KAFE,CAEI,gBAAQ;AAAE,kCAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AAAuB,yBAFrC,CAAP;AAGH","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from \"./HttpService\";\r\nimport { ConnectionFactory } from \"./ConnectionFactory\";\r\nimport { NegociacaoDao } from \"../dao/NegociacaoDao\";\r\nimport { Negociacao } from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService()\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).\r\n        then(periodos => {\r\n            const negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo), [])\r\n            return negociacoes\r\n        }).catch(erro => { throw new Error(erro) })\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return this._http.get('negociacoes/semana')\r\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações da samana')\r\n            })\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return this._http.get('negociacoes/anterior')\r\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações da semana anterior')\r\n            })\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return this._http.get('negociacoes/retrasada')\r\n            .then(negociacoes => negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)))\r\n            .catch(erro => {\r\n                console.log(erro)\r\n                throw new Error('Não foi possível obter as negociações semana retrasada')\r\n            })\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                // tbd: filtro\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(negociacao => resolve(negociacao))\r\n                .catch(erro => reject(erro))\r\n        })\r\n    }\r\n\r\n    lista() {\r\n        return new Promise((resolve, reject) => {\r\n            ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.listaTodos(Negociacao))\r\n                .then(negs => resolve(negs))\r\n                .catch(erro => reject(erro))\r\n        })\r\n    }\r\n\r\n    apaga() {\r\n        return new Promise((resolve, reject) => {\r\n            ConnectionFactory\r\n                .getConnection()\r\n                .then(connection => new NegociacaoDao(connection))\r\n                .then(dao => dao.apagaTodos())\r\n                .then(() => resolve())\r\n                .catch(erro => reject(erro))\r\n        })\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negs => negs.filter(n => !listaAtual.some(v => n.isEquals(v))))\r\n            .catch(erro => { throw new Error(erro) })\r\n    }\r\n}"]}