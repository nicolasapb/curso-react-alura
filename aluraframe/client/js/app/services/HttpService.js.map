{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleError","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;iDAEIC,G,EAAK;AACd,4BAAI,CAACA,IAAIC,EAAT,EACI,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACJ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,+BAAOJ,MAAMD,GAAN,EAAW;AACVM,qCAAS,EAAE,gBAAgB,kBAAlB,EADC;AAEVC,oCAAQ,MAFE;AAGVC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHI,yBAAX,EAKFH,IALE,CAKG;AAAA,mCAAO,OAAKC,YAAL,CAAkBP,GAAlB,CAAP;AAAA,yBALH,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    _handleError(res) {\r\n        if (!res.ok)\r\n            throw new Error(res.statusText)\r\n        return res\r\n    }\r\n\r\n    get(url) {\r\n        return fetch(url)\r\n            .then(res => this._handleError(res))\r\n            .then(res => res.json())\r\n    }\r\n\r\n    post(url, dado) {\r\n        return fetch(url, {\r\n                headers: { 'Content-type': 'application/json' },\r\n                method: 'POST',\r\n                body: JSON.stringify(dado)\r\n            })\r\n            .then(res => this._handleError(res))\r\n    }\r\n}"]}